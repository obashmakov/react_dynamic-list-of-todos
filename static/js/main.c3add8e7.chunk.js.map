{"version":3,"sources":["components/Input/Input.jsx","components/SelectTodosState/SelectTodosState.jsx","components/Button/Button.jsx","components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["Input","title","searchByTitle","htmlFor","type","id","name","value","placeholder","onChange","SelectTodosState","selectTodos","Button","userId","selectUser","className","onClick","Todo","completed","classNames","readOnly","TodoList","state","todos","props","event","target","setState","filter","todo","toLowerCase","includes","this","map","key","React","Component","BASE_URL","CurrentUser","user","loadData","prevProps","fetch","then","response","json","data","showInfo","email","phone","App","selectedUserId","showUserInfo","prevState","slice","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3add8e7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Input = ({ title, searchByTitle }) => (\n  <label htmlFor=\"title\">\n    <input\n      type=\"text\"\n      id=\"title\"\n      name=\"title\"\n      value={title}\n      placeholder=\"Search by todo title...\"\n      onChange={searchByTitle}\n    />\n  </label>\n);\n\nInput.propTypes = {\n  title: PropTypes.string.isRequired,\n  searchByTitle: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SelectTodosState = ({ selectTodos }) => (\n  <select onChange={selectTodos}>\n    <option value=\"all\">All</option>\n    <option value=\"completed\">Completed</option>\n    <option value=\"uncompleted\">Not completed</option>\n  </select>\n);\n\nSelectTodosState.propTypes = {\n  selectTodos: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ userId, selectUser }) => (\n  <>\n    <button\n      className=\"\n        TodoList__user-button\n        TodoList__user-button--selected\n        button\n      \"\n      type=\"button\"\n      onClick={() => selectUser(userId)}\n    >\n      User&nbsp;#\n      {userId}\n    </button>\n  </>\n);\n\nButton.propTypes = {\n  userId: PropTypes.number.isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Button } from '../Button';\n\nexport const Todo = ({ title, userId, completed, selectUser }) => (\n  <li className={classNames(`TodoList__item`, {\n    'TodoList__item--checked': completed === true,\n    'TodoList__item--unchecked': completed === false,\n  })}\n  >\n    <label>\n      <input type=\"checkbox\" readOnly />\n      <p>{title}</p>\n    </label>\n    <Button userId={userId} selectUser={selectUser} />\n  </li>\n);\n\nTodo.propTypes = {\n  title: PropTypes.string.isRequired,\n  userId: PropTypes.number.isRequired,\n  completed: PropTypes.bool.isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from '../Input';\nimport { SelectTodosState } from '../SelectTodosState';\nimport { Todo } from '../Todo';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    title: '',\n    todos: this.props.todos,\n  }\n\n  searchByTitle = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n      todos: this.props.todos.filter(todo => (\n        todo.title.toLowerCase().includes(value.toLowerCase())\n      )),\n    });\n  }\n\n  selectTodos = (event) => {\n    const { value } = event.target;\n\n    if (value === 'all') {\n      this.setState({\n        todos: this.props.todos,\n        title: '',\n      });\n    } else if (value === 'completed') {\n      this.setState({\n        todos: this.props.todos.filter(todo => (\n          todo.completed === true\n        )),\n        title: '',\n      });\n    } else if (value === 'uncompleted') {\n      this.setState({\n        todos: this.props.todos.filter(todo => (\n          todo.completed === false\n        )),\n        title: '',\n      });\n    }\n  }\n\n  render() {\n    const { todos, title } = this.state;\n    const { selectUser } = this.props;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <Input searchByTitle={this.searchByTitle} title={title} />\n          <SelectTodosState selectTodos={this.selectTodos} />\n          <ul className=\"TodoList__list\">\n            {\n              todos.map(todo => (\n                <Todo\n                  key={todo.id}\n                  title={todo.title}\n                  userId={todo.userId}\n                  completed={todo.completed}\n                  selectUser={selectUser}\n                />\n              ))\n            }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    completed: PropTypes.bool.isRequired,\n    createdAt: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    updatedAt: PropTypes.string.isRequired,\n    userId: PropTypes.number.isRequired,\n  })).isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport function getTodos() {\n  return fetch(`${BASE_URL}/todos`)\n    .then(response => response.json())\n    .then(json => json.data);\n}\n\nexport function getUser(id) {\n  return fetch(`${BASE_URL}/users/${id}`)\n    .then(response => response.json())\n    .then(json => json.data);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../api/api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const user = await getUser(this.props.userId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { userId, showInfo } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {userId}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n        <button\n          type=\"button\"\n          className=\"CurrentUser__clear\"\n          onClick={showInfo}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  showInfo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    showUserInfo: false,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((todos) => {\n        this.setState({\n          todos: todos.slice(0, 200),\n        });\n      });\n  }\n\n  selectUser = (selectedUserId) => {\n    this.setState({\n      selectedUserId,\n      showUserInfo: true,\n    });\n  }\n\n  showInfo = () => {\n    this.setState(prevState => ({\n      showUserInfo: !prevState.showUserInfo,\n    }));\n  };\n\n  render() {\n    const { todos, selectedUserId, showUserInfo } = this.state;\n\n    return (\n      <div className=\"App\">\n        {todos.length > 0 && (\n          <div className=\"App__sidebar\">\n            <TodoList todos={todos} selectUser={this.selectUser} />\n          </div>\n        )}\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId && showUserInfo ? (\n              <CurrentUser userId={selectedUserId} showInfo={this.showInfo} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}